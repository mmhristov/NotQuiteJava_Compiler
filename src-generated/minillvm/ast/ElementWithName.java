//generated by abstract-syntax-gen
package minillvm.ast;
import java.util.*;

public interface ElementWithName extends Element{
    void setName(String name);
    String getName();
    Element getParent();
    <T> T match(Matcher<T> s);
    void match(MatcherVoid s);
    public interface Matcher<T> {
        T case_Global(Global global);
        T case_Proc(Proc proc);
        T case_Parameter(Parameter parameter);
        T case_TypeStruct(TypeStruct typeStruct);
        T case_TemporaryVar(TemporaryVar temporaryVar);
    }

    public interface MatcherVoid {
        void case_Global(Global global);
        void case_Proc(Proc proc);
        void case_Parameter(Parameter parameter);
        void case_TypeStruct(TypeStruct typeStruct);
        void case_TemporaryVar(TemporaryVar temporaryVar);
    }

    ElementWithName copy();
    ElementWithName copyWithRefs();
    /** */
    public abstract String toString();
}
