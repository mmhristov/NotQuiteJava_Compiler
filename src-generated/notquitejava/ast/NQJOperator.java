//generated by abstract-syntax-gen
package notquitejava.ast;
import java.util.*;

public interface NQJOperator extends NQJElement{
    NQJElement getParent();
    <T> T match(Matcher<T> s);
    void match(MatcherVoid s);
    public interface Matcher<T> {
        T case_Plus(NQJPlus plus);
        T case_Less(NQJLess less);
        T case_Equals(NQJEquals equals);
        T case_And(NQJAnd and);
        T case_Minus(NQJMinus minus);
        T case_Times(NQJTimes times);
        T case_Div(NQJDiv div);
    }

    public interface MatcherVoid {
        void case_Plus(NQJPlus plus);
        void case_Less(NQJLess less);
        void case_Equals(NQJEquals equals);
        void case_And(NQJAnd and);
        void case_Minus(NQJMinus minus);
        void case_Times(NQJTimes times);
        void case_Div(NQJDiv div);
    }

    NQJOperator copy();
    NQJOperator copyWithRefs();
    /** "information about the source code"*/
    public abstract frontend.SourcePosition getSourcePosition();
    /** "information about the source code"*/
    public abstract void setSourcePosition(frontend.SourcePosition sourcePosition);
}
