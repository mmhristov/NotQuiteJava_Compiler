//generated by abstract-syntax-gen
package notquitejava.ast;
import java.util.*;

@SuppressWarnings({"cast", "unused", "rawtypes"})
public class NQJ {
    public static NQJProgram Program(NQJClassDeclList classDecls, NQJFunctionDeclList functionDecls, NQJInterfaceDeclList interfaceDecls) {
        return new NQJProgramImpl(classDecls, functionDecls, interfaceDecls);
    }
    public static NQJFunctionDecl FunctionDecl(NQJType returnType, String name, NQJVarDeclList formalParameters, NQJBlock methodBody) {
        return new NQJFunctionDeclImpl(returnType, name, formalParameters, methodBody);
    }
    public static NQJClassDecl ClassDecl(String name, NQJExtended extended, NQJImplemented impl, NQJVarDeclList fields, NQJFunctionDeclList methods) {
        return new NQJClassDeclImpl(name, extended, impl, fields, methods);
    }
    public static NQJInterfaceDecl InterfaceDecl(String name, NQJFunctionDeclList methods) {
        return new NQJInterfaceDeclImpl(name, methods);
    }
    public static NQJExtendsNothing ExtendsNothing() {
        return new NQJExtendsNothingImpl();
    }
    public static NQJExtendsClass ExtendsClass(String name) {
        return new NQJExtendsClassImpl(name);
    }
    public static NQJImplementsNothing ImplementsNothing() {
        return new NQJImplementsNothingImpl();
    }
    public static NQJImplementsInterfaces ImplementsInterfaces(ArrayList<String> interfaces) {
        return new NQJImplementsInterfacesImpl(interfaces);
    }
    public static NQJVarDecl VarDecl(NQJType type, String name) {
        return new NQJVarDeclImpl(type, name);
    }
    public static NQJTypeArray TypeArray(NQJType componentType, NQJExpr dimension) {
        return new NQJTypeArrayImpl(componentType, dimension);
    }
    public static NQJTypeInt TypeInt() {
        return new NQJTypeIntImpl();
    }
    public static NQJTypeBool TypeBool() {
        return new NQJTypeBoolImpl();
    }
    public static NQJTypeInterfaceOrClass TypeInterfaceOrClass(String name) {
        return new NQJTypeInterfaceOrClassImpl(name);
    }
    public static NQJStmtIf StmtIf(NQJExpr condition, NQJStatement ifTrue, NQJStatement ifFalse) {
        return new NQJStmtIfImpl(condition, ifTrue, ifFalse);
    }
    public static NQJStmtWhile StmtWhile(NQJExpr condition, NQJStatement loopBody) {
        return new NQJStmtWhileImpl(condition, loopBody);
    }
    public static NQJStmtReturn StmtReturn(NQJExpr result) {
        return new NQJStmtReturnImpl(result);
    }
    public static NQJStmtExpr StmtExpr(NQJExpr expr) {
        return new NQJStmtExprImpl(expr);
    }
    public static NQJStmtAssign StmtAssign(NQJExprL address, NQJExpr value) {
        return new NQJStmtAssignImpl(address, value);
    }
    public static NQJArrayLookup ArrayLookup(NQJExpr arrayExpr, NQJExpr arrayIndex) {
        return new NQJArrayLookupImpl(arrayExpr, arrayIndex);
    }
    public static NQJFieldAccess FieldAccess(NQJExpr receiver, String fieldName) {
        return new NQJFieldAccessImpl(receiver, fieldName);
    }
    public static NQJVarUse VarUse(String varName) {
        return new NQJVarUseImpl(varName);
    }
    public static NQJRead Read(NQJExprL address) {
        return new NQJReadImpl(address);
    }
    public static NQJExprBinary ExprBinary(NQJExpr left, NQJOperator operator, NQJExpr right) {
        return new NQJExprBinaryImpl(left, operator, right);
    }
    public static NQJExprUnary ExprUnary(NQJUnaryOperator unaryOperator, NQJExpr expr) {
        return new NQJExprUnaryImpl(unaryOperator, expr);
    }
    public static NQJArrayLength ArrayLength(NQJExpr arrayExpr) {
        return new NQJArrayLengthImpl(arrayExpr);
    }
    public static NQJMethodCall MethodCall(NQJExpr receiver, String methodName, NQJExprList arguments) {
        return new NQJMethodCallImpl(receiver, methodName, arguments);
    }
    public static NQJFunctionCall FunctionCall(String methodName, NQJExprList arguments) {
        return new NQJFunctionCallImpl(methodName, arguments);
    }
    public static NQJBoolConst BoolConst(boolean boolValue) {
        return new NQJBoolConstImpl(boolValue);
    }
    public static NQJNumber Number(int intValue) {
        return new NQJNumberImpl(intValue);
    }
    public static NQJExprThis ExprThis() {
        return new NQJExprThisImpl();
    }
    public static NQJExprNull ExprNull() {
        return new NQJExprNullImpl();
    }
    public static NQJNewArray NewArray(NQJType baseType, NQJExpr arraySize) {
        return new NQJNewArrayImpl(baseType, arraySize);
    }
    public static NQJNewObject NewObject(String className) {
        return new NQJNewObjectImpl(className);
    }
    public static NQJAnd And() {
        return new NQJAndImpl();
    }
    public static NQJPlus Plus() {
        return new NQJPlusImpl();
    }
    public static NQJMinus Minus() {
        return new NQJMinusImpl();
    }
    public static NQJTimes Times() {
        return new NQJTimesImpl();
    }
    public static NQJDiv Div() {
        return new NQJDivImpl();
    }
    public static NQJLess Less() {
        return new NQJLessImpl();
    }
    public static NQJEquals Equals() {
        return new NQJEqualsImpl();
    }
    public static NQJUnaryMinus UnaryMinus() {
        return new NQJUnaryMinusImpl();
    }
    public static NQJNegate Negate() {
        return new NQJNegateImpl();
    }
    public static NQJTopLevelDeclList TopLevelDeclList(NQJTopLevelDecl ... elements ) {
        NQJTopLevelDeclList l = new NQJTopLevelDeclListImpl();
        l.addAll(Arrays.asList(elements));
        return l;
    }
    public static NQJTopLevelDeclList TopLevelDeclList(Iterable<NQJTopLevelDecl> elements ) {
        NQJTopLevelDeclList l = new NQJTopLevelDeclListImpl();
        if (elements instanceof Collection) l.addAll((Collection<? extends NQJTopLevelDecl>) elements);
        else for (NQJTopLevelDecl elem : elements) l.add(elem);
        return l;
    }
    public static NQJClassDeclList ClassDeclList(NQJClassDecl ... elements ) {
        NQJClassDeclList l = new NQJClassDeclListImpl();
        l.addAll(Arrays.asList(elements));
        return l;
    }
    public static NQJClassDeclList ClassDeclList(Iterable<NQJClassDecl> elements ) {
        NQJClassDeclList l = new NQJClassDeclListImpl();
        if (elements instanceof Collection) l.addAll((Collection<? extends NQJClassDecl>) elements);
        else for (NQJClassDecl elem : elements) l.add(elem);
        return l;
    }
    public static NQJInterfaceDeclList InterfaceDeclList(NQJInterfaceDecl ... elements ) {
        NQJInterfaceDeclList l = new NQJInterfaceDeclListImpl();
        l.addAll(Arrays.asList(elements));
        return l;
    }
    public static NQJInterfaceDeclList InterfaceDeclList(Iterable<NQJInterfaceDecl> elements ) {
        NQJInterfaceDeclList l = new NQJInterfaceDeclListImpl();
        if (elements instanceof Collection) l.addAll((Collection<? extends NQJInterfaceDecl>) elements);
        else for (NQJInterfaceDecl elem : elements) l.add(elem);
        return l;
    }
    public static NQJMemberDeclList MemberDeclList(NQJMemberDecl ... elements ) {
        NQJMemberDeclList l = new NQJMemberDeclListImpl();
        l.addAll(Arrays.asList(elements));
        return l;
    }
    public static NQJMemberDeclList MemberDeclList(Iterable<NQJMemberDecl> elements ) {
        NQJMemberDeclList l = new NQJMemberDeclListImpl();
        if (elements instanceof Collection) l.addAll((Collection<? extends NQJMemberDecl>) elements);
        else for (NQJMemberDecl elem : elements) l.add(elem);
        return l;
    }
    public static NQJVarDeclList VarDeclList(NQJVarDecl ... elements ) {
        NQJVarDeclList l = new NQJVarDeclListImpl();
        l.addAll(Arrays.asList(elements));
        return l;
    }
    public static NQJVarDeclList VarDeclList(Iterable<NQJVarDecl> elements ) {
        NQJVarDeclList l = new NQJVarDeclListImpl();
        if (elements instanceof Collection) l.addAll((Collection<? extends NQJVarDecl>) elements);
        else for (NQJVarDecl elem : elements) l.add(elem);
        return l;
    }
    public static NQJFunctionDeclList FunctionDeclList(NQJFunctionDecl ... elements ) {
        NQJFunctionDeclList l = new NQJFunctionDeclListImpl();
        l.addAll(Arrays.asList(elements));
        return l;
    }
    public static NQJFunctionDeclList FunctionDeclList(Iterable<NQJFunctionDecl> elements ) {
        NQJFunctionDeclList l = new NQJFunctionDeclListImpl();
        if (elements instanceof Collection) l.addAll((Collection<? extends NQJFunctionDecl>) elements);
        else for (NQJFunctionDecl elem : elements) l.add(elem);
        return l;
    }
    public static NQJBlock Block(NQJStatement ... elements ) {
        NQJBlock l = new NQJBlockImpl();
        l.addAll(Arrays.asList(elements));
        return l;
    }
    public static NQJBlock Block(Iterable<NQJStatement> elements ) {
        NQJBlock l = new NQJBlockImpl();
        if (elements instanceof Collection) l.addAll((Collection<? extends NQJStatement>) elements);
        else for (NQJStatement elem : elements) l.add(elem);
        return l;
    }
    public static NQJExprList ExprList(NQJExpr ... elements ) {
        NQJExprList l = new NQJExprListImpl();
        l.addAll(Arrays.asList(elements));
        return l;
    }
    public static NQJExprList ExprList(Iterable<NQJExpr> elements ) {
        NQJExprList l = new NQJExprListImpl();
        if (elements instanceof Collection) l.addAll((Collection<? extends NQJExpr>) elements);
        else for (NQJExpr elem : elements) l.add(elem);
        return l;
    }
}